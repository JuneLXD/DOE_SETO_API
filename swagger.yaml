openapi: 3.0.3
info:
  title: DOE SETO API
  description: This is an API for interacting with a Hyperledger Fabric blockchain via AWS API Gateway and Lambda functions for the DOE SETO project.
  version: 1.0.0
servers:
  - url: https://wx4j71p58h.execute-api.us-east-1.amazonaws.com/dev
tags:
  - name: General
    description: General routes
  - name: Household
    description: Household management routes

paths:
  # /:
  #   get:
  #     tags:
  #       - General
  #     summary: Root route (For testing site availability)
  #     responses:
  #       '200':
  #         description: Everything is working fine.

  /userVerify:
    get:
      tags:
        - General
      summary: Verify API key with the user
      parameters:
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The username matching the API key.
        '403':
          description: Unauthorized.
          

  
  /household:
    get:
      tags:
        - Household
      summary: Query a household by premiseID
      parameters:
        - name: premiseID
          in: query
          required: true
          schema:
            type: string
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SuccessResponseWithHousehold'
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithUnauthoriedKey'

    post:
      tags:
        - Household
      summary: Register a new household
      parameters:
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHousehold'
      responses:
        '200':
          description: Registration successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseWithTxId'
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithUnauthoriedKey'

    delete:
      tags:
        - Household
      summary: Delete a household by premiseID
      parameters:
        - name: premiseID
          in: query
          required: true
          schema:
            type: string
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Registration successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseWithTxId'
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithUnauthoriedKey'
              

    put:
      tags:
        - Household
      summary: Update a household
      parameters:
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHousehold'
      responses:
        '200':
          description: Registration successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseWithTxId'
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithUnauthoriedKey'
                
  /queryHouseholdHistory:
    get:
      tags:
        - Household
      summary: Query the history of a household by premiseID
      parameters:
        - name: premiseID
          in: query
          required: true
          schema:
            type: string
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithUnauthoriedKey'
                
  /getAllHouseholds:
    get:
      tags:
        - Household
      summary: Query all households, return all existing households premise IDs.
      parameters:
        - name: x-api-key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HouseholdIDs'
        '400':
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseWithUnauthoriedKey'
                
components:
  schemas:
    SuccessResponseWithHousehold:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/OutputHousehold'
    SuccessResponseWithTxId:
      type: object
      example:
        result:
          transactionId: 'fade4944834314f3b451b591b865eb36186f8791191be6f11d8864a2c57f93f8'
      properties:
        result:
          $ref: '#/components/schemas/TransactionId'
    TransactionId:
      type: string
      description: The transaction ID of the write operation.
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
          description: The error message from the API.
    HouseholdIDs:
      type: object
      properties:
        result:
          type: array
          items:
            type: string
          description: An array of household IDs.
      example:
        result: ["householdid1", "householdid2", "householdid3"]
    ErrorResponseWithUnauthoriedKey:
      type: object
      properties:
        errorMessage:
          type: string
          example: Unauthorized
    OutputHousehold:
      type: object
      properties:
        premiseID:
          type: string
          description: The ID of the premise.
        createTimeStamp:
          type: string
          description: The timestamp when the household was created. (yyyy-MM-dd HH:mm:ss)
          example: 2023-09-12 00:00:00
        updateTimeStamp:
          type: string
          description: The timestamp when the household was last updated. (yyyy-MM-dd HH:mm:ss)
          example: 2023-09-12 00:00:00
        electricityUse:
          type: number
          description: The electricity usage.
          format: float
        minBillAmount:
          type: number
          description: The minimum bill amount.
          format: float
        baselineCalculation:
          type: number
          description: The baseline calculation for electricity use.
          format: float
        coOptBillAmount:
          type: number
          description: The bill amount after co-optimization.
          format: float
        actualBillAmount:
          type: number
          description: The actual bill amount.
          format: float
        numOverrides:
          type: integer
          description: The number of overrides.
          format: int32
    InputHousehold:
      type: object
      properties:
        premiseID:
          type: string
          description: The ID of the premise.
        electricityUse:
          type: number
          description: The electricity usage.
          format: float
        minBillAmount:
          type: number
          description: The minimum bill amount.
          format: float
        baselineCalculation:
          type: number
          description: The baseline calculation for electricity use.
          format: float
        coOptBillAmount:
          type: number
          description: The bill amount after co-optimization.
          format: float
        actualBillAmount:
          type: number
          description: The actual bill amount.
          format: float
        numOverrides:
          type: integer
          description: The number of overrides.
          format: int32
